name: Approval Check

on:
  issues:
    types:
      - opened
      - labeled

jobs:
  check-approvals:
    runs-on: ubuntu-latest

    steps:
      - name: Check Approvals
        uses: actions/github-script@0.10.0
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const issue = context.payload.issue;
            const allowedApprovers = ["SahanaGowdaBV"]; // Specify the GitHub usernames of allowed approvers
            const comments = await github.issues.listComments({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: issue.number,
            });
            
            const approvals = comments.data.filter(comment => {
              const isApproval = comment.body.toLowerCase().includes('approved');
              const isAllowedApprover = allowedApprovers.includes(comment.user.login);
              return isApproval && isAllowedApprover;
            });
            
            if (approvals.length >= allowedApprovers.length) {
              console.log(`Required approvals from listed users met. Closing the issue.`);
              await github.issues.update({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: issue.number,
                state: 'closed',
              });
            } else {
              console.log(`Not enough approvals from the listed users. Waiting for 5 minutes.`);
              await new Promise(resolve => setTimeout(resolve, 5 * 60 * 1000)); // Wait for 5 minutes

              // Check again after waiting
              const updatedComments = await github.issues.listComments({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: issue.number,
              });

              const updatedApprovals = updatedComments.data.filter(comment => {
                const isApproval = comment.body.toLowerCase().includes('approved');
                const isAllowedApprover = allowedApprovers.includes(comment.user.login);
                return isApproval && isAllowedApprover;
              });

              if (updatedApprovals.length < allowedApprovers.length) {
                console.log(`Not enough approvals after waiting. Issue resolution blocked.`);
                process.exit(1);
              }
            }
